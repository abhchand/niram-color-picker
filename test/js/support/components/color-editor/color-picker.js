import { act } from 'react-dom/test-utils';

const closeColorPicker = () => {
  global.wrapper
    .find('.color-editor__modal-btns .button--hollow')
    .at(0)
    .simulate('click');
};

const openColorPicker = () => {
  global.wrapper.find('.color-editor__color-cell').at(0).simulate('click');
};

const setColorPicker = async (color) => {
  /*
   * The `react-color` library which provides the color picker
   * adds a 100ms debounce on the input to prevent duplicate
   * changes in a short time period.
   *
   * To account for that, we add in a 100ms delay, which also needs
   * to be wrapped in `act()` since it asynchronously completes
   * and updates the Color Picker modal DOM with the newly selected color.
   */
  await act(async () => {
    /*
     * The `id` for this input (generated by `react-color`) seems to change across
     * NodeJS and the browser. Instead, just look for what shouldb be the only
     * `<input />` rendered.
     */
    const input = global.wrapper.find('.chrome-picker input').at(0);
    input.getDOMNode().value = `#${color.toHex().value()}`;
    input.simulate('change');

    await new Promise((r) => setTimeout(r, 100));
  });
};

const submitColorPicker = () => {
  global.wrapper
    .find('.color-editor__modal-btns > button')
    .at(0)
    .simulate('click');
};

export { closeColorPicker, openColorPicker, setColorPicker, submitColorPicker };
